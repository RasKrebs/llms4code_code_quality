### General Application Domain Info
domain: Machine Learning
application: Preprocessing
algorithm: Principal Componenet Analysis (PCA)

long_prompt: """
Implement Principal Component Analysis algorithm from scratch in Python using eigenvalue 
decomposition. The class should take n_components at initialization, which specifies the
number of components to use. If n_components is not specified it should default to all. 
Add a fit method that takes input X, make sure it can handle different data types. The 
method should fit the data, i.e. compute the eigen values and eigen vectors (components) 
for the data. The fit method should also compute  the explained variance ratio, and 
cumulative sum of explained variance ratio for each component and store it on the object. 
Add a transform method that takes one input, X and similarly, make sure to handle 
differnet data types. The transform method should project the inputted data onto the 
components and return the projected data. Include a fit_transform that takes X and calls 
the fit and transform methods respectively. Make sure to implement the necessary steps 
to handle differing inputs, and common edge cases.

Make sure to add documentation to the class and methods in the form of docstrings and 
comments. Also make sure to add type hints to the methods. Follow the common conventions 
for Python code.
"""

medium_prompt: """
Create a python class called PrincipalComponentAnalysis that implements the Principal 
Component Analysis algorithm from scratch using eigen value decomposition. It should 
have three methods, fit, transform and fit_transform. One arguments should be able to 
be passed, name n_components which specifies the number of components to use. If 
n_components is not specified it should default to all.

Make sure to add documentation to the class and methods in the form of docstrings and 
comments. Also make sure to add type hints to the methods.
"""

small_prompt: """
Implement prinicpal component analysis from scratch using eigenvalue decomposition
"""
